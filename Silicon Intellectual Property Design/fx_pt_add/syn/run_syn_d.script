#remove all designs
remove_design -designs

#read Verilog file
if { [file exists "ADDER"] } { sh rm -r ADDER }
sh mkdir ADDER

define_design_lib ADDER -path ./ADDER

analyze -library ADDER -format verilog \
        {../rtl/fx_pt_add_d.v}

elaborate fx_pt_add -architecture verilog -library ADDER

#remove unconnected ports
remove_unconnected_ports \
    -blast_buses [get_cells -hierarchical *]

#change current design
current_design fx_pt_add

#check design
uplevel #0 check_design

#set operating conditions
set_operating_conditions \
    -min_library fast -min fast  \
    -max_library slow -max slow

#set timing constraints
set_max_delay 2.0 \
   -rise  -to [all_outputs] \
          -from [all_inputs]

set_max_delay 2.0 \
   -fall  -to [all_outputs] \
          -from [all_inputs]

#Solve Multiple Instance
uniquify

#solve assign Problem
set verilogout_no_tri true
set_fix_multiple_port_nets \
    -all -buffer_constants [get_designs *]

#compile design
compile_ultra
compile_ultra

#remove unconnected ports
remove_unconnected_ports \
    -blast_buses [get_cells -hierarchical *]

#change naming rules
set bus_inference_style {%s[%d]}
set bus_naming_style {%s[%d]}
set hdlout_internal_busses true

change_names -hierarchy -rule verilog

define_name_rules name_rule \
      -allowed {a-z A-Z 0-9 _} \
      -max_length 255 -type cell

define_name_rules name_rule \
      -allowed {a-z A-Z 0-9 _[]} \
      -max_length 255 -type net

define_name_rules name_rule \
      -map {{"\\*cell\\*" "cell"}}

define_name_rules name_rule \
      -case_insensitive

change_names -hierarchy -rules name_rule

#Write out ddc
write -format ddc -hierarchy \
      -output fx_pt_add_syn_d.ddc

#Write out gate-level netlist 
write -format verilog -hierarchy \
      -output fx_pt_add_syn_d.v

#Write out sdf file
write_sdf -version 1.0 \
          -context verilog \
          -load_delay net \
          ../sim/sdf/fx_pt_add_syn_d.sdf

uplevel #0 \
       { report_timing -path full -delay max -nworst 1 \
         -max_paths 1 -significant_digits 2 -sort_by group }

uplevel #0 { report_area }

#exit dc
exit    
